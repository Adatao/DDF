/**
 * 
 */
package com.adatao.ddf.content;

import com.adatao.ddf.DDF;

/**
 * <p>
 * Views are different, but related DDFs. A new view may be generated by some
 * transformation of an existing DDF which results in entirely new DDFs with
 * different columns or rows.
 * </p>
 * <p>
 * Views should be implemented as weak or soft references from the original DDF.
 * The intent is to have these views "cached", so that they can stick around a
 * bit after creation, in case the same machine-learning algorithm is called
 * requiring the same view. At the same time, because they are weak references,
 * they can be garbage collected soon, thus saving memory.
 * </p>
 * 
 * @author ctn
 * 
 */
public interface IHandleViews {

  /**
   * Performs a SQL query against our owner DDF, and returns a new DDF
   * 
   * @param sqlCommand
   * @return the resulting DDF
   */
  @Deprecated // to be removed
  public DDF sql2ddf(String sqlCommand);

  /**
   * * Performs a SQL query against our owner DDF, and returns the result as
   * rows of text
   * 
   * @param sqlCommand
   * @return rows of text from the SQL result
   */
  @Deprecated // to be removed
  public String[] sql2text(String sqlCommand);

  /**
   * @param numSamples
   * @return a new DDF containing `numSamples` rows selected randomly from our
   *         owner DDF.
   */
  public DDF getRandomSample(int numSamples);
  /**
   * Clears out all current views.
   */
  public void reset();


}
