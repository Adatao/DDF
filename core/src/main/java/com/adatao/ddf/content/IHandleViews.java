/**
 * 
 */
package com.adatao.ddf.content;

import java.util.UUID;

import com.adatao.ddf.DDF;
import com.adatao.ddf.etl.IHandleFilteringAndProjections;

/**
 * <p>
 * Views are different, but related DDFs. A new view may be generated by some transformation of an
 * existing DDF, by, e.g., {@link IHandleFilteringAndProjections}, which results in entirely new
 * DDFs with different columns or rows.
 * </p>
 * <p>
 * Views should be implemented as weak or soft references from the original DDF. The intent is to
 * have these views "cached", so that they can stick around a bit after creation, in case the same
 * machine-learning algorithm is called requiring the same view. At the same time, because they are
 * weak references, they can be garbage collected soon, thus saving memory.
 * </p>
 * 
 * @author ctn
 * 
 */
public interface IHandleViews {

  /**
   * Returns a DDF (new or cached) that has the given columns in the specified format. For example,
   * it may be columns 1,2,7,3, with format LabeledPoint, in which case columns (1,2,7) are the
   * x-values, and column 3 is the y-value, by convention.
   * 
   * @param columns
   * @param format
   * @return
   */
  public DDF get(int[] columns, String format);

  /**
   * Clears out all current views for this DDF.
   */
  public void reset();

  /**
   * Removes the specified view from this DDF.
   * 
   * @param ddfId
   */
  public void remove(UUID ddfId);
}
